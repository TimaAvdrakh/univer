# Generated by Django 2.2.4 on 2020-07-07 04:18

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('portal_users', '0067_auto_20200630_1352'),
        ('schedules', '0037_auto_20200630_1352'),
    ]

    operations = [
        migrations.CreateModel(
            name='RepetitionTypes',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Уникальный идентификатор')),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('sort', models.IntegerField(default=500)),
                ('name', models.CharField(max_length=800, verbose_name='Название')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': ('Тип повторения события',),
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Уникальный идентификатор')),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('sort', models.IntegerField(default=500)),
                ('name', models.CharField(max_length=800, verbose_name='Название')),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('event_start', models.DateTimeField(default=False, verbose_name='Дата и время начала события')),
                ('event_end', models.DateTimeField(default=False, verbose_name='Дата и время конец события')),
                ('event_place', models.TextField(blank=True, default=False, null=True, verbose_name='Место проведения')),
                ('notification', models.BooleanField(default=False, verbose_name='Уведомления участникам')),
                ('event_description', models.TextField(blank=True, default=False, null=True, verbose_name='Описание события')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events_creator', to='portal_users.Profile', verbose_name='Автор события')),
                ('participants', models.ManyToManyField(related_name='events_participants', to='portal_users.Profile', verbose_name='Участники события')),
                ('repetition_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='calendar_api.RepetitionTypes', verbose_name='Тип повторения события')),
                ('reserve_auditory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schedules.Room', verbose_name='Забранированная аудитория')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
            },
        ),
    ]
